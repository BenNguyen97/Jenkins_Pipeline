pipeline {
    agent any

    environment {
        TERRAFORM_BIN = "$HOME/bin/terraform"  // Đường dẫn chính xác
        AWS_CREDENTIALS_ID = 'AWS_CREDENTIALS' // AWS Credentials trong Jenkins
    }

    stages {
        stage('Checkout Code') {
            steps {
                script {
                    git branch: 'main',
                        credentialsId: 'github-token', // Sử dụng token GitHub
                        url: 'https://github.com/BenNguyen97/Jenkins_Pipeline.git'
                }
            }
        }

        stage('Init Terraform') {
            steps {
                withCredentials([[$class: 'AmazonWebServicesCredentialsBinding', credentialsId: AWS_CREDENTIALS_ID]]) {
                    script {
                        sh '''
                        echo "Checking Terraform..."
                        if ! command -v terraform &> /dev/null; then
                            echo "Terraform not found. Installing..."
                            curl -fsSL https://releases.hashicorp.com/terraform/1.10.5/terraform_1.10.5_linux_amd64.zip -o terraform.zip
                            rm -f terraform
                            unzip -o terraform.zip
                            chmod +x terraform
                            mkdir -p $HOME/bin
                            mv terraform $HOME/bin/
                            export PATH=$HOME/bin:$PATH
                        else
                            echo "Terraform already installed"
                        fi
                        echo "Terraform version:"
                        $HOME/bin/terraform version
                        '''
                    }
                }
            }
        }

        stage('Plan Terraform') {
            steps {
                withCredentials([aws(credentialsId: AWS_CREDENTIALS_ID)]) {
                    script {
                        sh ''' 
                        export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
                        export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
                        
                        cd Infrastructure
                        $HOME/bin/terraform init
                        $HOME/bin/terraform plan -out=tfplan\
                            -var="access_key=$AWS_ACCESS_KEY_ID" \
                            -var="secret_key=$AWS_SECRET_ACCESS_KEY"
                        '''
                    }
                }
            }
        }
        stage('Apply Terraform') {
            steps {
                withCredentials([aws(credentialsId: AWS_CREDENTIALS_ID)]) {
                    script {
                        sh '''
                        cd Infrastructure
                        $HOME/bin/terraform apply -auto-approve tfplan
                        '''
                    }
                }
            }
        }
    }
}
